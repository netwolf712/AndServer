apply plugin: 'maven-publish'
apply plugin: 'signing'
java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addStringOption("charset", "UTF-8")
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://s01.oss.sonatype.org/content/repositories/snapshots/"
}

def getSonatypeUserName() {
    return hasProperty('SONATYPE_USERNAME') ? SONATYPE_USERNAME : ""
}

def getSonatypePassword() {
    return hasProperty('SONATYPE_PASSWORD') ? SONATYPE_PASSWORD : ""
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = PROJECT_GROUP
            version = PROJECT_VERSION
            artifactId = POM_ARTIFACT_ID
            from components.java
            pom {
                name = POM_ARTIFACT_ID
                description = POM_DESCRIPTION
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = getSnapshotRepositoryUrl()
            } else {
                url = getReleaseRepositoryUrl()
            }
            credentials {
                username = getSonatypeUserName()
                password = getSonatypePassword()
            }
        }
    }
}

//signing {
//    sign(publishing.publications.mavenJava)
//}